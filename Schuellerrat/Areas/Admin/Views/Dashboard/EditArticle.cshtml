@using System.Linq
@using Microsoft.AspNetCore.Identity.UI.V4.Pages.Internal.Account.Manage
@using Schuellerrat.InputModels
@model Schuellerrat.InputModels.EditArticleInputModel

<div class="container">
    @if (this.TempData.ContainsKey("message"))
    {
        <div class="alert alert-success alert-dismissible show" role="alert">
            @this.TempData["message"]
            <button style="padding: 0; height: auto" type="button" class="close" data-dismiss="alert" aria-label="Close">
                &times;
            </button>
        </div>
    }
    <h2 class="mb-5">Промени събитие</h2>
    <form asp-controller="Dashboard" asp-action="EditArticle" method="post" asp-route-articleId="@Model.Id" enctype="multipart/form-data">

        <div class="form-group">
            <h4>Заглавие</h4>

            <input class="form-control" asp-for="@Model.Title">
            <span class="text-danger" asp-validation-for="@Model.Title"></span>
        </div>

        @foreach (var image in @Model.OldImages)
        {
            <img style="max-height: 300px" src="@image.Path" />

            <a class="btn btn-danger" asp-area="Admin" asp-controller="Dashboard" asp-action="DeleteImage" asp-route-id="@image.Id">X</a>

        }

        <div class="form-group mb-5">
            <h4>Добави изображения</h4>
            <input asp-for="@Model.Images" class="form-control" />
            <span asp-validation-for="@Model.Images" class="text-danger"></span>
        </div>

        <div id="education_fields_container">
            <div id="education_fields">
                <h4>Параграфи</h4>
                <div class="input-group-btn">
                    <button class="btn btn-success float-right" type="button" onclick="education_fields();"> <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> </button>
                </div>

                @for (int i = 0; i < @Model.Paragraphs.Count; i++)
                {
                    <div id="@i" class="custom-paragraph-container">
                        <div class='form-group'>
                            Заглавие:
                            <input type='text' value="@Model.Paragraphs.ToList()[i].Title" name="Paragraphs[@i].Title" id='' />
                            @*<span asp-validation-for='Paragraphs.ToList()[i].Title' class='text-danger'></span>*@
                            Текст: <input type='text' value="@Model.Paragraphs.ToList()[i].Content" name="Paragraphs[@i].Content" id='' />
                            @*<span asp-validation-for='Paragraphs.ToList()[i].Content' class='text-danger'></span>*@
                        </div>
                        <div>
                            <button class='btn btn-success float-right' type='button' onclick='education_fields();'><span class='glyphicon glyphicon-plus' aria-hidden='true'></span></button>
                        </div>
                        <div>
                            <button class='delete-btn btn btn-danger float-right' type='button' onclick='delete_paragraph_from_database_and_remove_html(@Model.Paragraphs.ToList()[i].Id);'><span class='' aria-hidden='true'>X</span></button>
                        </div>
                    </div>
                }
            </div>
        </div>

        <button type="submit" class="btn btn-primary pl-5 pr-5 mb-5">Завърши</button>
    </form>
    <form method="post" id="antiForgeryForm"></form>
</div>



@section Scripts{
    <script>
        $(function () {
            $("#datepicker").datepicker({
                autoclose: true,
                todayHighlight: true,
                toggleActive: true,
            }).datepicker('update', new Date());

        });
    </script>

    <script>
        var room = 1;
        var j = @Model.ParagraphTexts.Count;

        function education_fields() {
            room++;
            var objTo = document.getElementById('education_fields')
            var divtest = document.createElement("div");
            divtest.setAttribute("class", "form-group removeclass" + room);
            var rdiv = 'removeclass' + room;

            //divtest.innerHTML = "<div class='custom-paragraph-container'><div class='form-group'>Заглавие:<input type='text' name='Paragraphs[" + j + "].Title' id=''/>Текст: <input type='text'  name='Paragraphs[" + j + "].Content' id=''/></div><div><button class='btn btn-success float-right' type='button' onclick='education_fields();'><span class='glyphicon glyphicon-plus' aria-hidden='true'></span></button><div><button class='delete-btn btn btn-danger float-right' type='button' onclick='removeContainer(this)'><span class='' aria-hidden='true'>X</span></button></div></div></div>";
            divtest.innerHTML = "<div id=" + j + " class='custom-paragraph-container'><div class='form-group'>Заглавие:<input type='text' name='Paragraphs[" + j + "].Title' id=''/>Текст: <input type='text'  name='Paragraphs[" + j + "].Content' id=''/></div><div><button class='btn btn-success float-right' type='button' onclick='education_fields();'><span class='glyphicon glyphicon-plus' aria-hidden='true'></span></button><div><button class='delete-btn btn btn-danger float-right' type='button' onclick='removeContainer(this)'><span class='' aria-hidden='true'>X</span></button></div></div></div>";
            console.log("paragraph index updated", j);
            console.log("paragraph index updated", j);


            objTo.appendChild(divtest)
            j++;
            value
            var allCreatedParagraphs = $("#education_fields_container").prop("outerHTML");
            console.log("all the paragraphs in HTML", allCreatedParagraphs);

            //

        }

        function remove_education_fields(rid) {
            $('.removeclass' + rid).remove();
        }

        // only the server-generated delete buttons have this function
        function delete_paragraph_from_database_and_remove_html(id) {

            console.log("function delete_paragraph_from_database_and_remove_html(" + id + ") called");

            var antiForgeryToken = $("#antiForgeryForm > input[name=__RequestVerificationToken]").val();
            console.log("sending request to API Controller with id: ", id);
            var data = { id: id };
            $.ajax({
                type: "POST",
                url: "/api/Paragraphs",
                //method: "POST",
                data: JSON.stringify(data),
                headers: {
                    "X-CSRF-TOKEN": antiForgeryToken,
                },
                success: function() {
                    console.log("SUCCESS!")
                },
                contentType: "application/json"
            })
            console.log("request sent");

        }

        // removes HTML of the server-rendered form-groups
        $('.delete-btn').click(function() {

            console.log("function on .delete-btn called: deleting HTML...")

            var elToRemove = $(this).parent().parent();

            console.log("id of the removed element: " + elToRemove.attr("id"));
            var deletedParagraphId = elToRemove.attr("id");
            reduceParagraphs(deletedParagraphId);

            // remove element
            elToRemove.remove();
        });

        // remove HTML of the temporary form-groups
        function removeContainer(elm) {

            console.log("function removeContainer(elm) CALLED: deleting HTML...");

            var elToRemove = $(elm).parent().parent().parent();

            console.log("eltoremove: ");
            console.log(elToRemove);

            console.log("id of the removed element: " + elToRemove.attr("id"));

            var deletedParagraphId = elToRemove.attr("id");
            reduceParagraphs(deletedParagraphId);

            // remove element
            elToRemove.remove();
        };

        function reduceParagraphs(deletedParagraphId) {
            console.log("function reduceParagraphs(" + deletedParagraphId + ") called!")
            // reduce the paragraphIndex by 1
            j--;

            // find all paragraph containers through the custom class
            var paragraphContainers = $(".custom-paragraph-container");
            console.log("all paragraphs: ");
            console.log(paragraphContainers);

            // reduce the paragraphs[i] attribute of all next paragraphs by 1 if they come after the deleted paragraph
            for (let i = 0; i < paragraphContainers.length; i++) {
                if ($(paragraphContainers[i]).attr("id") > deletedParagraphId) {
                    console.log("element with higher ID found");
                    console.log(paragraphContainers[i]);

                    var elToReduce = $(paragraphContainers[i]);
                    elToReduce.attr("id", elToReduce.attr("id") - 1);

                    var elToReduceChildren = $(elToReduce.children()[0]).children();
                    console.log(elToReduceChildren);

                    for (let i = 0; i < elToReduceChildren.length; i++) {
                        console.log(elToReduceChildren[i])
                        var currentInputEl = $(elToReduceChildren[i]);

                        var nameAttr = currentInputEl.attr("name");
                        console.log(nameAttr);

                        var nameAttrProp = nameAttr.match("\\.[a-zA-Z]+")[0];
                        console.log(nameAttrProp);

                        var nameAttrNumber = nameAttr.match("[0-9]+")[0];
                        console.log(nameAttrNumber);

                        currentInputEl.attr("name", "Paragraphs[" + (nameAttrNumber - 1) + "]" + nameAttrProp);
                    }

                    //
                }
            }


            // check each custom-paragraph-container, if the id is higher than the id of the deleted one, reduce its attr by 1
        }

        // give each custom-paragraph-container an id with a number, the id of the temps will be based on j
    </script>


}